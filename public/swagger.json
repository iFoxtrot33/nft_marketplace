{
  "openapi": "3.0.0",
  "info": {
    "title": "NFT Marketplace API",
    "version": "1.0.0",
    "description": "API for managing NFTs in Notion database"
  },
  "servers": [
    {
      "url": "https://nft-marketplace-iurii.vercel.app",
      "description": "Production server"
    }
  ],
  "components": {
    "schemas": {
      "NFTData": {
        "type": "object",
        "properties": {
          "page_id": {
            "type": "string",
            "description": "Unique Notion page ID"
          },
          "id": {
            "type": "number",
            "description": "Numeric NFT ID"
          },
          "title": {
            "type": "string",
            "description": "NFT title (equals to ID)"
          },
          "nft_address": {
            "type": "string",
            "description": "NFT address"
          },
          "created_time": {
            "type": "string",
            "format": "date-time",
            "description": "Creation time"
          },
          "last_edited_time": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification time"
          }
        }
      },
      "UpdateNFTRequest": {
        "type": "object",
        "properties": {
          "updated_nft_address": {
            "type": "string",
            "description": "New NFT address"
          }
        },
        "required": [
          "updated_nft_address"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error description"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Operation success status"
          },
          "data": {
            "$ref": "#/components/schemas/NFTData"
          }
        }
      },
      "NFTListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NFTData"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "description": "Number of records per page"
              },
              "offset": {
                "type": "number",
                "description": "Offset from start"
              },
              "returned": {
                "type": "number",
                "description": "Number of returned records"
              },
              "has_more": {
                "type": "boolean",
                "description": "Whether there are more records"
              },
              "next_cursor": {
                "type": "string",
                "nullable": true,
                "description": "Cursor for next page"
              }
            }
          }
        }
      },
      "CartData": {
        "type": "object",
        "properties": {
          "page_id": {
            "type": "string",
            "description": "Unique Notion page ID"
          },
          "title": {
            "type": "string",
            "description": "Cart title"
          },
          "user_id": {
            "type": "string",
            "description": "User ID who owns the cart"
          },
          "nfts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of NFT addresses"
          },
          "created_time": {
            "type": "string",
            "format": "date-time",
            "description": "Creation time"
          },
          "last_edited_time": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification time"
          }
        }
      },
      "AddToCartRequest": {
        "type": "object",
        "properties": {
          "nft_address": {
            "type": "string",
            "description": "NFT address to add to cart"
          }
        },
        "required": [
          "nft_address"
        ]
      },
      "RemoveFromCartRequest": {
        "type": "object",
        "properties": {
          "nft_address": {
            "type": "string",
            "description": "NFT address to remove from cart"
          }
        },
        "required": [
          "nft_address"
        ]
      },
      "DeleteCartRequest": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "User ID whose cart to delete"
          }
        },
        "required": [
          "user_id"
        ]
      }
    }
  },
  "paths": {
    "/api/cart/{userid}/all": {
      "delete": {
        "summary": "Clear entire cart",
        "description": "Removes all NFTs from user's cart (empties the cart)",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart cleared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CartData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/cart/{userid}/delete": {
      "delete": {
        "summary": "Delete entire cart",
        "description": "Completely removes user's cart from database (archives the cart record)",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID whose cart to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "message": {
                      "type": "string",
                      "description": "Success message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/cart/{userid}": {
      "get": {
        "summary": "Get cart by user ID",
        "description": "Returns a specific cart by user ID",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Cart found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/CartData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cart not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add NFT to cart",
        "description": "Adds NFT to user's cart. Creates cart if it doesn't exist.",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToCartRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NFT added to cart successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CartData"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Cart created and NFT added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CartData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or NFT already in cart",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove NFT from cart",
        "description": "Removes specific NFT from user's cart",
        "tags": [
          "Cart"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveFromCartRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NFT removed from cart successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CartData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, cart not found or NFT not in cart",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cart not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/nft/{address}": {
      "get": {
        "summary": "Get NFT by address",
        "description": "Returns a specific NFT by its address",
        "tags": [
          "NFT"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "NFT address"
          }
        ],
        "responses": {
          "200": {
            "description": "NFT found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/NFTData"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NFT not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new NFT",
        "description": "Creates a new NFT with the specified address. ID is generated automatically.",
        "tags": [
          "NFT"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "NFT address to create"
          }
        ],
        "responses": {
          "201": {
            "description": "NFT successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "NFT with this address already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update NFT address",
        "description": "Updates the address of an existing NFT",
        "tags": [
          "NFT"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Current NFT address"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNFTRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "NFT successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "NFT with current address not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "NFT with new address already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete NFT",
        "description": "Archives (deletes) NFT by specified address",
        "tags": [
          "NFT"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "NFT address to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "NFT successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Operation success status"
                    },
                    "message": {
                      "type": "string",
                      "description": "Success deletion message"
                    },
                    "page_id": {
                      "type": "string",
                      "description": "ID of deleted page"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "NFT not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/nft": {
      "get": {
        "summary": "Get all NFTs",
        "description": "Returns a list of NFTs with pagination support",
        "tags": [
          "NFT"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            },
            "description": "Number of records to return"
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            },
            "description": "Number of records to skip"
          },
          {
            "in": "query",
            "name": "page_size",
            "schema": {
              "type": "integer"
            },
            "description": "Alternative name for limit (for backward compatibility)"
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            },
            "description": "Cursor for cursor-based pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with NFT list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NFTListResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}